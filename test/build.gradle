/*
 * (C) Copyright IBM Corp. 2021
 *
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'maven-publish'
}

description = """Setup For Integration Test Dependencies"""

import groovy.json.JsonSlurper
task downloadPerfTestRecords()  {
    def rootDir = project.file("./").absolutePath
    outputs.dir(rootDir + "/test_data/synthetic_mass/fhir")

    doLast {
        if (!project.hasProperty("cloudApiKey")) {
            println "Required API key parameter is missing, will not download FHIR records."
            return
        }

        def apiKey = project.getProperty("cloudApiKey")

        println "Requesting IAM token..."
        def command = ['curl', '-X', 'POST', 'https://iam.cloud.ibm.com/identity/token', '-d', 'grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=' + apiKey]
        def resp = command.execute().text

        def json = new JsonSlurper().parseText(resp)
        def token = json.access_token

        if (token == null) {
            println "Failed to get IAM access token, will not download FHIR records."
            return
        }

        ['mkdir', rootDir + '/test_data/synthetic_mass'].execute()
        ['mkdir', rootDir + '/test_data/synthetic_mass/fhir'].execute()

        println "Downloading perf-test-records.zip from COS..."
        ['curl', 'https://s3.us-east.cloud-object-storage.appdomain.cloud/wh-hri-dev1-fhir-validation-perf-test-records/perf-test-records.zip',
         '-H', 'Authorization: bearer ' + token, '--output', rootDir + '/test_data/synthetic_mass/fhir/perf-test-records.zip' ].execute().text

        println "Unzipping..."
        ['unzip', rootDir + '/test_data/synthetic_mass/fhir/perf-test-records.zip', '-d', rootDir + '/test_data/synthetic_mass/fhir'].execute().text

        println "Removing perf-test-records.zip"
        ['rm', rootDir + '/test_data/synthetic_mass/fhir/perf-test-records.zip'].execute()
    }
}

task generateSyntheaRecords {
    def rootDir = project.file("./").absolutePath
    outputs.dir(rootDir + "/test_data/synthea/fhir")

    doLast {
        def address='https://github.com/synthetichealth/synthea/releases/download/master-branch-latest/synthea-with-dependencies.jar'
        def target= rootDir + "/dependencies/synthea-with-dependencies.jar"

        def mkdirProc = ['mkdir', rootDir + '/dependencies'].execute()
        mkdirProc.waitFor()

        def syntheaJar = new File(target)
        syntheaJar.withOutputStream { out ->
            new URL(address).withInputStream { from ->  out << from; }
        }
        syntheaJar.setExecutable(true)

        ['java', '-jar', rootDir + '/dependencies/synthea-with-dependencies.jar', '-p', '300', '-c',
         rootDir + '/test_data/synthea.properties'].execute()
    }
}